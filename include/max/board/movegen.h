#pragma once
/// \file
/// Declarations of functions that perform move generation and validation on #max_board_t

#include "max/board/board.h"

/// \defgroup movegen Move Generation
/// Functions to generate and validate possible moves on a chessboard.
/// Includes restricted move generation functions like #max_board_capturegen_pseudo
/// useful for quiescence search.
/// @{

/// Fill a list with all valid moves for the current side to play.
///
/// \section legality Legality
/// This function generates *pseudo* legal moves - that is, it does not perform additional validation on
/// the moves that have been generated. This must be done with #max_board_move_is_valid with all generated moves.
///
/// \param moves Pointer to a buffer of moves that will be filled with pseudo-legal moves
void max_board_movegen_pseudo(max_board_t *const board, max_movelist_t *const moves);

/// Generate all pseudo-legal capture moves for the current side to play.
/// Legality of captures is *not* validated, and all moves generated by this function must also be checked with
/// #max_board_move_is_valid
void max_board_capturegen_pseudo(max_board_t *const board, max_movelist_t *const moves);

/// Check if the given move is legal on the chessboard. That is, it does not leave the king in check and
/// a castle is not performed through an attack
bool max_board_move_is_valid(max_board_t *const board, max_move_t move);

/// @}
